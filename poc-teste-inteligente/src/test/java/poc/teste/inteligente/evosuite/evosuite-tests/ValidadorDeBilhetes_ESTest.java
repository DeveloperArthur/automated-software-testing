/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 26 18:54:48 GMT 2023
 */

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.LocalDateTime;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.junit.runner.RunWith;
import poc.teste.inteligente.Bilhete;
import poc.teste.inteligente.ValidadorDeBilhetes;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class ValidadorDeBilhetes_ESTest extends ValidadorDeBilhetes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Bilhete bilhete0 = new Bilhete();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Boolean boolean0 = new Boolean(false);
      bilhete0.setBloqueado(boolean0);
      Double double0 = new Double(9.616334960051638);
      bilhete0.setSaldoVT(double0);
      bilhete0.setSaldoComum(double0);
      bilhete0.setUltimaVezUtilizado(localDateTime0);
      System.setCurrentTimeMillis((-194L));
      ValidadorDeBilhetes.valida(bilhete0);
      ValidadorDeBilhetes.valida(bilhete0);
      Boolean boolean1 = ValidadorDeBilhetes.valida(bilhete0);
      assertEquals(5.616334960051638, bilhete0.getSaldoComum(), 0.01);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Bilhete bilhete0 = new Bilhete();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Boolean boolean0 = new Boolean(false);
      bilhete0.setBloqueado(boolean0);
      Double double0 = new Double(0.0);
      bilhete0.setSaldoVT(double0);
      bilhete0.setSaldoComum(double0);
      bilhete0.setUltimaVezUtilizado(localDateTime0);
      System.setCurrentTimeMillis((-194L));
      Boolean boolean1 = ValidadorDeBilhetes.valida(bilhete0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Bilhete bilhete0 = new Bilhete();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Boolean boolean0 = new Boolean(false);
      bilhete0.setBloqueado(boolean0);
      bilhete0.setUltimaVezUtilizado(localDateTime0);
      Boolean boolean1 = ValidadorDeBilhetes.valida(bilhete0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Bilhete bilhete0 = new Bilhete();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Boolean boolean0 = new Boolean(false);
      bilhete0.setBloqueado(boolean0);
      bilhete0.setUltimaVezUtilizado(localDateTime0);
      System.setCurrentTimeMillis((-194L));
      // Undeclared exception!
      try {
        ValidadorDeBilhetes.valida(bilhete0);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("poc.teste.inteligente.ValidadorDeBilhetes", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Bilhete bilhete0 = new Bilhete();
      Boolean boolean0 = Boolean.TRUE;
      bilhete0.setBloqueado(boolean0);
      Boolean boolean1 = ValidadorDeBilhetes.valida(bilhete0);
      assertFalse(boolean1.equals((Object)boolean0));
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ValidadorDeBilhetes validadorDeBilhetes0 = new ValidadorDeBilhetes();
  }
}
